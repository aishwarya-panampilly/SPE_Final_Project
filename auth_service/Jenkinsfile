pipeline {
    agent any
    options {
            timestamps()
            ansiColor('xterm')
            logstash()  // ðŸ‘ˆ this sends logs to Elasticsearch
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('DockerHubCred')
        IMAGE_NAME = 'aishjp/auth-service'
        KUBECONFIG = '/var/lib/jenkins/.kube/config'
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: 'github-cred', url: 'https://github.com/aishwarya-panampilly/SPE_Final_Project.git'
            }
        }

        stage('Build') {
            steps {
                dir('auth_service') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Docker Build') {
            steps {
                dir('auth_service') {
                    sh 'docker build -t $IMAGE_NAME:latest .'
                }
            }
        }

        stage('Docker Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DockerHubCred', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                        echo $PASSWORD | docker login -u $USERNAME --password-stdin
                        docker push $IMAGE_NAME:latest
                    '''
                }
            }
        }

        stage('Clean Docker Images') {
            steps {
                // Remove all local images with the same repo name except `latest`
                sh '''
                    docker images --format "{{.Repository}}:{{.Tag}}" | grep "$IMAGE_NAME" | grep -v "latest" | xargs -r docker rmi -f || true
                '''
            }
        }

        stage('Ansible Deploy') {
            steps {
                sh '''
                    ansible-playbook -i ansible/inventory ansible/deploy.yml \
                    --vault-password-file /var/lib/jenkins/vault_pass.txt
                '''
            }
        }

        stage('Log to ELK') {
            steps {
                echo 'Log shipping to ELK is handled via Filebeat or container log driver.'
            }
        }
    }
}
